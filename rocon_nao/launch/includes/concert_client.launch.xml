<launch>
  <arg name="robot_name"        default="$(env NAO_NAME)"         doc="used as a unique identifier and occasionally to preconfigure root namespaces, gateway/zeroconf ids etc."/>
  <arg name="robot_type"        default="$(env NAO_TYPE)"         doc="just in case you are considering a 'variant' and want to make use of this."/>

  <!-- Rapp Manager --> 
  <arg name="rapp_auto_installation"            default="false"  doc="automatically install rapps from the web (not typically used)"/> <!-- http://wiki.ros.org/rocon_app_manager/Tutorials/indigo/Automatic Rapp Installation -->
  <arg name="rapp_package_whitelist"            default="$(env NAO_RAPP_PACKAGE_WHITELIST)" doc="a list of catkin packages that provide rapps to be loaded by the app manager."/>
  <arg name="rapp_package_blacklist"            default="$(env NAO_RAPP_PACKAGE_BLACKLIST)" doc="a list of catkin packages to blacklist from providing rapps."/>
  <arg name="robot_icon"                        default="rocon_nao/nao.jpg"        doc="passed to user interfaces to socialise the nao's appearance"/>
  <arg name="rapp_verbose"                      default="true"   doc="show verbose output from running apps (aka roslaunch --screen)"/>

  <!-- ***************************** Rocon Master Info ************************** -->
  <arg name="robot_description"                 default="Kick-ass ROS Humanoid"/>

  <!-- Capabilities --> 
  <arg name="capabilities"                      default="false" doc="start and register an underlying capability server"/>

  <!-- Interactions --> 
  <arg name="interactions"      default="false"  doc="start an interactions manager"/>

  <!-- Connectivity -->
  <arg name="robot_unique_name"                 default="true"   doc="postfix a uuid to robot_name to create unique namespaces for rapps (else manually guarantee unique names for multimaster'ing)"/>
  <arg name="concert_whitelist"                 default="[]"     doc="list of multimaster hubs (concerts) to connect to"/>
  <arg name="local_machine_only"                default="false"  doc="connect only to multimaster hubs (concerts) on the local machine (testing option)"/>
  <arg name="concert_watch_period"              default="10"     doc="polling loop for discovering multimaster hubs (concerts)" />
  <arg name="firewall"                          default="false"  doc="block people from flipping (registering topics) on this master."/>

  <arg name="concert_uri"                       default="" doc="configure concert hub uri for direct connection."/>
  <arg name="disable_zeroconf"                  default="false" doc="disable zeroconfiguration"/>

  <!-- Rapp Manager -->
  <include file="$(find rocon_app_manager)/launch/concert_client.launch">

    <!-- Rapp Manager --> 
    <arg name="robot_name"                        value="$(arg robot_name)" />
    <arg name="robot_type"                        value="$(arg robot_type)" />
    <arg name="robot_icon"                        value="$(arg robot_icon)" />
    <arg name="rapp_package_whitelist"            value="$(arg rapp_package_whitelist)" />
    <arg name="rapp_package_blacklist"            value="$(arg rapp_package_blacklist)" />
    <arg name="rapp_auto_installation"            value="$(arg rapp_auto_installation)" />
    <arg name="screen"                            value="$(arg rapp_verbose)" />

    <!-- Rocon Master Info -->
    <arg name="robot_description"                 value="$(arg robot_description)" />

    <!-- Capabilities --> 
    <arg name="capabilities"                      value="$(arg capabilities)" />

    <!-- Interactions --> 
    <arg name="interactions"                      value="$(arg interactions)"/>

    <!-- Connectivity -->
    <arg name="firewall"                          value="$(arg firewall)"/>
    <arg name="robot_unique_name"                 value="$(arg robot_unique_name)"/>
    <arg name="concert_watch_period"              value="$(arg concert_watch_period)"/>
    <arg name="concert_whitelist"                 value="$(arg concert_whitelist)"/>
    <arg name="local_machine_only"                value="$(arg local_machine_only)"/>

    <arg name="concert_uri"                       value="$(arg concert_uri)"/>
    <arg name="disable_zeroconf"                  value="$(arg disable_zeroconf)"/>
  </include>
</launch>
